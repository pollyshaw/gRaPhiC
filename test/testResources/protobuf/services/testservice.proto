syntax = "proto3";

package test;

service TestService {

    rpc NoOp(IdMessage) returns (Person){}
}

service SecondTestService {
    rpc NoOp(QueryParamMessage) returns (PossiblyFailingMessage){}
}

message EmptyMessage {}

message QueryParamMessage {
    oneof predicate {
        uint32 id = 1;
        string name = 2;
    }
}

message PossiblyFailingMessage {
    oneof result {
        EmptyMessage success = 1;
        EmptyMessage failure = 2;
    }
    EmptyMessage but_always_there = 3;
}
message Address {
    string address_line_1 = 1;
    string postcode = 2;
}

message Person {
    string first_name = 1;
    uint32 year_of_birth = 2;
    Address address = 3;
}

message IdMessage {
    uint32 id1 = 1;
    uint64 id2 = 2;
    int32 id3 = 3;
    int64 id4 = 4;
    sint32 id5 = 5;
    sint64 id6 = 6;
    fixed32 id7 = 7;
    fixed64 id8 = 8;
    sfixed32 id9 = 9;
    sfixed64 id10 = 10;
}